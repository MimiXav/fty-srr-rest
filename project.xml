<project
    name = "fty-srr-rest"
    description = "Save, restore and reset REST API"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    url = "https://42ity.org"
    license = "GPL-2.0+"
    repository = "https://github.com/42ity/fty-srr-rest"
    >

    <target name = "debian" />
    <target name = "redhat" />
    <target name = "travis" >
        <!-- Force to use trusty because we still depend of auto_ptr :( -->
        <option name = "dist" value = "trusty" />
        <option name = "shadow_gcc" value = "2" />
        <!-- option name = "clangformat_implem" value = "autotools" / -->
        <option name = "use_cmake" value = "0" />
        <!-- option name = "clangformat_require_good" value = "1" / -->
        <option name = "clangformat_allow_failures" value = "1" />
        <option name = "use_pkg_deps_prereqs_source" value = "0" />
        <option name = "require_gitignore" value = "1" />
    </target>
    <target name = "jenkins" >
        <option name = "agent_label" value = "devel-image &amp;&amp; x86_64" />
        <option name = "triggers_pollSCM" value = "H/2 * * * *" />
        <option name = "test_cppcheck" value = "1" />
        <option name = "build_docs" value = "1" />
        <option name = "dist_docs" value = "1" />
        <option name = "use_test_retry" value = "3" />
        <option name = "use_test_timeout" value = "30" />

        <!-- Try to avoid avalanche rebuilds of same code on our CI -->
        <option name = "use_earlymilestone" value = "1" />
        <option name = "use_deploymilestone" value = "1" />
        <option name = "use_build_nonconcurrent" value = "1" />
        <option name = "use_checkout_explicit" value = "1" />
    </target>

    <classfilename keep-tree = "true" use-cxx = "true" pretty-print = "no" source-extension = "cc" />
    <include filename = "license.xml" />

    <version major = "1" minor = "0" patch = "0" />
    <abi current = "1" revision = "0" age = "0" />

    <!-- Note: cxxtools facilities are directly used in this codebase -->
    <use project = "cxxtools"
        test = "cxxtools::Utf8Codec::Utf8Codec"
        header = "cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools.git"
        release = "2.2-FTY-master"
        />

    <!-- Note: pure C projects should use fty-log/fty_logger.h, C++ use fty_log.h -->
    <use project = "fty-common-logging" libname = "libfty_common_logging"
        header = "fty_log.h"
        repository = "https://github.com/42ity/fty-common-logging.git"
        release = "master"
        test = "fty_common_logging_selftest" >

        <!-- Note: pure C projects should use clogger.h, C++ use logger.h -->
        <use project = "log4cplus"
            header = "log4cplus/logger.h"
            test = "appender_test"
            repository = "https://github.com/42ity/log4cplus.git"
            release = "1.1.2-FTY-master"
            />
    </use>
    
    <use project = "fty-common-rest" libname = "libfty_common_rest" header = "fty_common_rest.h"
        repository = "https://github.com/42ity/fty-common-rest.git"
        release = "master"
        test = "fty_common_rest_selftest" >

        <use project = "cxxtools" test = "cxxtools::Utf8Codec::Utf8Codec" header = "cxxtools/allocator.h"
            repository = "https://github.com/42ity/cxxtools.git"
            release = "2.2-FTY-master"
            />

        <use project = "czmq"
            repository = "https://github.com/42ity/czmq.git"
            release = "v3.0.2-FTY-master"
            min_major = "3" min_minor = "0" min_patch = "2" >

            <use project = "libzmq"
                repository = "https://github.com/42ity/libzmq.git"
                release = "4.2.0-FTY-master" >

                <use project = "libsodium" prefix = "sodium"
                    repository = "https://github.com/42ity/libsodium.git"
                    release = "1.0.5-FTY-master"
                    test = "sodium_init"
                    />
            </use>
        </use>

        <use project = "tntnet"
            header = "tnt/tntnet.h"
            repository = "https://github.com/42ity/tntnet.git"
            release = "2.2-FTY-master"
            />
<<<<<<< HEAD
=======
            
        <use project = "libsasl2" header = "sasl/sasl.h"
            debian_name = "libsasl2-dev"
            redhat_name = "cyrus-sasl-devel"
            />
>>>>>>> 6c0afb6d5dd9cffdc32d3a04642638d0f0f29a77

        <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
            repository = "https://github.com/42ity/fty-common-logging.git"
            release = "master"
            test = "fty_common_logging_selftest" >

            <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                repository = "https://github.com/42ity/log4cplus.git"
                release = "1.1.2-FTY-master"
                />
        </use>

        <use project = "fty-common" libname = "libfty_common" header = "fty_common.h"
            repository = "https://github.com/42ity/fty-common.git"
            release = "master"
            test = "fty_common_selftest" >

            <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
                repository = "https://github.com/42ity/fty-common-logging.git"
                release = "master"
                test = "fty_common_logging_selftest" >

                <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                    repository = "https://github.com/42ity/log4cplus.git"
                    release = "1.1.2-FTY-master"
                    />
           </use>
        </use>
    
        <use project = "fty-common-db" libname = "libfty_common_db" header = "fty_common_db.h"
            repository = "https://github.com/42ity/fty-common-db.git"
            release = "master"
            test = "fty_common_db_selftest" >

            <use project = "czmq"
                repository = "https://github.com/42ity/czmq.git"
                release = "v3.0.2-FTY-master"
                min_major = "3" min_minor = "0" min_patch = "2" >

                <use project = "libzmq"
                    repository = "https://github.com/42ity/libzmq.git"
                    release = "4.2.0-FTY-master" >

                    <use project = "libsodium" prefix = "sodium"
                        repository = "https://github.com/42ity/libsodium.git"
                        release = "1.0.5-FTY-master"
                        test = "sodium_init" />
                </use>
            </use>

            <use project = "tntdb"
                test = "tntdb::Date::gmtime"
                repository = "https://github.com/42ity/tntdb.git"
                release = "1.3-FTY-master"
                builddir = "tntdb">

            <use project = "cxxtools" test = "cxxtools::Utf8Codec::Utf8Codec" header = "cxxtools/allocator.h"
                repository = "https://github.com/42ity/cxxtools.git"
                release = "2.2-FTY-master"
                />
            </use>

            <use project = "fty-common" libname = "libfty_common" header = "fty_common.h"
                repository = "https://github.com/42ity/fty-common.git"
                release = "master"
                test = "fty_common_selftest" >

                <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
                    repository = "https://github.com/42ity/fty-common-logging.git"
                    release = "master"
                    test = "fty_common_logging_selftest" >

                    <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                        repository = "https://github.com/42ity/log4cplus.git"
                        release = "1.1.2-FTY-master"
                        />
                </use>
            </use>
        </use>
    </use>
    
    <use project = "fty-common-messagebus" libname = "libfty_common_messagebus" header = "fty_common_messagebus.h"
        repository = "https://github.com/42ity/fty-common-messagebus.git"
        release = "master"
        test = "fty_common_messagebus_selftest">
    
        <use project = "czmq"
            repository = "https://github.com/42ity/czmq.git"
            release = "v3.0.2-FTY-master"
            min_major = "3" min_minor = "0" min_patch = "2" >

            <use project = "libzmq"
                repository = "https://github.com/42ity/libzmq.git"
                release = "4.2.0-FTY-master" >

                <use project = "libsodium" prefix = "sodium"
                    repository = "https://github.com/42ity/libsodium.git"
                    release = "1.0.5-FTY-master"
                    test = "sodium_init"
                    />
            </use>
        </use>
        
        <use project = "malamute" min_major = "1" test = "mlm_server_test"
        repository = "https://github.com/42ity/malamute.git"
        release = "1.0-FTY-master" />

        <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
            repository = "https://github.com/42ity/fty-common-logging.git"
            release = "master"
            test = "fty_common_logging_selftest" >

            <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                repository = "https://github.com/42ity/log4cplus.git"
                release = "1.1.2-FTY-master" />
        </use>

    </use>
    
    <use project = "fty-common-dto" libname = "libfty_common_dto" header = "fty_common_dto.h"
        repository = "https://github.com/42ity/fty-common-dto.git"
        release = "master"
        test = "fty_common_dto_selftest" >
        
        <use project = "fty-common-messagebus" libname = "libfty_common_messagebus" header = "fty_common_messagebus.h"
        repository = "https://github.com/42ity/fty-common-messagebus.git"
        release = "master"
        test = "fty_common_messagebus_selftest">
    
        <use project = "czmq"
            repository = "https://github.com/42ity/czmq.git"
            release = "v3.0.2-FTY-master"
            min_major = "3" min_minor = "0" min_patch = "2" >

            <use project = "libzmq"
                repository = "https://github.com/42ity/libzmq.git"
                release = "4.2.0-FTY-master" >

                <use project = "libsodium" prefix = "sodium"
                    repository = "https://github.com/42ity/libsodium.git"
                    release = "1.0.5-FTY-master"
                    test = "sodium_init"
                    />
            </use>
        </use>
        
        <use project = "malamute" min_major = "1" test = "mlm_server_test"
        repository = "https://github.com/42ity/malamute.git"
        release = "1.0-FTY-master" />

        <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
            repository = "https://github.com/42ity/fty-common-logging.git"
            release = "master"
            test = "fty_common_logging_selftest" >

            <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                repository = "https://github.com/42ity/log4cplus.git"
                release = "1.1.2-FTY-master" />
        </use>

        </use>
    </use>
        

    <!-- Note: the .cpp file is generated by ECPP parser during build
         from .ecpp file that is EXTRA_DISTed in Makemodule-local.am,
         and renamed to a .cc file just to abuse pregenerated zproject
         recipes. The "extra" or "bin" tags did not produce the effect
         we needed, since they refer verbatim to the "name" (new GSLs
         are needed to handle this).
         The "license.cc" file generated by zproject should be discarded
         and ignored; the "license.h" is harmless to have and include
         in other generated files. There is no selftest.
     -->
    <class name = "fty_srr_helpers" state = "stable" selftest = "0" /> <!-- Helpers -->
    <class name = "rest_srr_GET" private = "1" state = "stable" selftest = "0" /> <!-- rest_srr_GET.cc will be generated by eccp -->
    <class name = "rest_srr_save_POST" private = "1" state = "stable" selftest = "0" /> <!-- rest_srr_save_GET.cc will be generated by eccp -->
    <class name = "rest_srr_restore_POST" private = "1" state = "stable" selftest = "0" /> <!-- rest_srr_restore_POST.cc will be generated by eccp -->
    <class name = "rest_srr_reset_POST" private = "1" state = "stable" selftest = "0" /> <!-- rest_srr_reset_POST.cc will be generated by eccp -->

</project>
